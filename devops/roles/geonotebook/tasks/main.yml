---
- name: Ensure geonotebook base directory exists
  file:
    path: "{{ geonotebook_dir }}"
    state: directory
    group: "{{ ansible_user_id }}"
    owner: "{{ ansible_user_id }}"
    mode: 0755
  become: yes
  become_user: root

- name: Clone the geonotebook repository
  git:
    repo: https://github.com/OpenGeoscience/geonotebook.git
    dest: "{{ geonotebook_dir }}"
    version: "{{ geonotebook_version }}"
    accept_hostkey: yes
    update: "{{ geonotebook_update|default(omit) }}"
    force: "{{ geonotebook_force|default(omit) }}"

- name: add ubuntugis ppa
  apt_repository:
    repo: "ppa:ubuntugis/ppa"
    state: present

- name: update apt cache
  apt:
    update_cache: yes

- name: Install system dependencies
  apt:
    name: "{{ item }}"
  with_items:
    - gdal-bin
    - python-numpy
    - python-matplotlib
    - libgdal-dev
    - python-numpy
    - python-matplotlib
    - python-gdal
    - python-matplotlib
    - python-numpy
    - python-pip
    - python-rasterio
    - python-requests

- name: Update pip and install example notebook requirements
  pip:
    executable: pip2
    name: "pip"
    state: latest
    chdir: "{{ geonotebook_dir }}"

- name: Use system installed python-gdal
  lineinfile:
    line: "GDAL==1.11.2"
    state: absent
    dest: "{{geonotebook_dir}}/requirements.txt"
  when: use_system_python_gdal is defined

- name: Install geonotebook python requirements
  pip:
    executable: pip2
    requirements: "{{geonotebook_dir}}/requirements.txt"
  environment:
    CPLUS_INCLUDE_PATH: /usr/include/gdal
    C_INCLUDE_PATH: /usr/include/gdal

- name: Install the geonotebook package
  pip:
    executable: pip2
    extra_args: "-e"
    name: "."
    state: latest
    chdir: "{{ geonotebook_dir }}"

- name: Template out the geonotebook.ini configuration file
  template:
    src: geonotebook.ini.j2
    dest: /usr/local/etc/geonotebook.ini

- name: Generate jupyter notebook config
  command: "jupyter notebook --generate-config"
  args:
    creates: "{{ ansible_user_dir }}/.jupyter/jupyter_notebook_config.py"

- debug:
    msg: "Specify geonotebook_auth_token when deploying to a production environment"
  when: geonotebook_auth_token == ""

- name: Remove existing auth token setting
  lineinfile:
    name: "{{ ansible_user_dir }}/.jupyter/jupyter_notebook_config.py"
    regexp: "^c.NotebookApp.token"
    state: absent

- name: Disable auth token
  lineinfile:
    name: "{{ ansible_user_dir }}/.jupyter/jupyter_notebook_config.py"
    line: "c.NotebookApp.token = ''"
    state: present
  when: not geonotebook_auth_enabled

- name: Configure auth token
  lineinfile:
    name: "{{ ansible_user_dir }}/.jupyter/jupyter_notebook_config.py"
    line: "c.NotebookApp.token = '{{ geonotebook_auth_token }}'"
    state: present
  when: geonotebook_auth_enabled
